#################################
#
# Compton Config
#
# Originally from the config found here:
# http://duncanlock.net/blog/2013/06/07/how-to-switch-to-compton-for-beautiful-tear-free-compositing-in-xfce/
#
#################################
#
# Backend
#
#################################

# Backend to use: "xrender" or "glx".
# GLX backend is typically much faster but depends on a sane driver.
backend = "glx";

#################################
#
# GLX backend
#
#################################

# GLX backend: Avoid using stencil buffer, useful if you don’t have a stencil
# buffer. Might cause incorrect opacity when rendering transparent content (but
# never practically happened) and may not work with --blur-background. My tests
# show a 15% performance boost. Recommended.
glx-no-stencil = true;

# GLX backend: Copy unmodified regions from front buffer instead of redrawing
# them all.
glx-copy-from-front = false;

# GLX backend: Avoid rebinding pixmap on window damage.
# Probably could improve performance on rapid window content changes, but is
# known to break things on some drivers (LLVMpipe).
# Recommended if it works.
glx-no-rebind-pixmap = true;

# Use the damage information to limit rendering to parts of the screen that has
# actually changed. Potentially improves the performance.
use-damage = true;

#################################
#
# Shadows
#
#################################

# Enabled client-side shadows on windows.
shadow = true;
# The blur radius for shadows. (default 12)
shadow-radius = 5;
# The left offset for shadows. (default -15)
shadow-offset-x = -5;
# The top offset for shadows. (default -15)
shadow-offset-y = -5;
# The translucency for shadows. (default .75)
shadow-opacity = 0.75;

# The shadow exclude options are helpful if you have shadows enabled. Due to
# the way compton draws its shadows, certain applications will have visual glitches
# (most applications are fine, only apps that do weird things with xshapes or argb
# are affected).
# This list includes all the affected apps I found in my testing. The "! name~=''"
# part excludes shadows on any "Unknown" windows, this prevents a visual glitch with
# the XFWM alt tab switcher.
shadow-exclude = [
    "! name~=''",
    "name = 'Notification'",
    "name = 'Plank'",
    "name = 'Docky'",
    "name = 'Kupfer'",
    "name = 'xfce4-notifyd'",
    "name *= 'VLC'",
    "name *= 'compton'",
    "name *= 'Chromium'",
    "name *= 'Chrome'",
    "name *= 'Firefox'",
    "name *= 'stalonetray'",
    "name *= 'panel'",
    "class_g = 'Conky'",
    "class_g = 'Kupfer'",
    "class_g = 'Synapse'",
    "class_g ?= 'Notify-osd'",
    "class_g ?= 'Cairo-dock'",
    "class_g ?= 'Xfce4-notifyd'",
    "class_g ?= 'Xfce4-power-manager'"
];

# Do not paint shadows on shaped windows. Note shaped windows here means
# windows setting its shape through X Shape extension. Those using ARGB
# background is beyond our control. Deprecated, use --shadow-exclude
# 'bounding_shaped' or --shadow-exclude 'bounding_shaped && !rounded_corners'
# instead.
shadow-ignore-shaped = false;

#################################
#
# Opacity
#
#################################


inactive-opacity = 1;
# Default opacity for active windows. (0.0 - 1.0, defaults to 1.0)
active-opacity = 1;

frame-opacity = 1;
# Let inactive opacity set by -i overrides the windows' _NET_WM_OPACITY values.
inactive-opacity-override = false;

# Dim inactive windows. (0.0 - 1.0, defaults to 0.0)
inactive-dim = 0.0;
# Do not let dimness adjust based on window opacity.
# inactive-dim-fixed = true;
# Blur background of transparent windows. Bad performance with X Render backend.
# GLX backend is preferred.
blur-background = false;
# Blur background of opaque windows with transparent frames as well.
blur-background-frame = false;
# Do not let blur radius adjust based on window opacity.
blur-background-fixed = false;
blur-background-exclude = [
    "window_type = 'dock'",
    "window_type = 'desktop'"
];

#################################
#
# Fading
#
#################################

# Fade windows during opacity changes.
fading = true;
# The time between steps in a fade in milliseconds. (default 10).
fade-delta = 4;
# Opacity change between steps while fading in. (default 0.028).
fade-in-step = 0.03;
# Opacity change between steps while fading out. (default 0.03).
fade-out-step = 0.03;
# Fade windows in/out when opening/closing
# no-fading-openclose = true;
# Do not fade destroyed ARGB windows with WM frame. Workaround of bugs in
# Openbox, Fluxbox, etc.
# no-fading-destroyed-argb

# Specify a list of conditions of windows that should not be faded.
fade-exclude = [ ];

#################################
#
# Other
#
#################################

# Try to detect WM windows (a non-override-redirect window with no child that
# has WM_STATE) and mark them as active.
mark-wmwin-focused = true;
# Mark override-redirect windows that doesn’t have a child window with WM_STATE
# focused.
mark-ovredir-focused = true;
# Use EWMH _NET_WM_ACTIVE_WINDOW to determine which window is focused instead
# of using FocusIn/Out events.
# Usually more reliable but depends on a EWMH-compliant WM.
use-ewmh-active-win = true;
# Detect rounded corners and treat them as rectangular when
# --shadow-ignore-shaped is on.
detect-rounded-corners = true;

# Detect _NET_WM_OPACITY on client windows, useful for window managers not i
# passing _NET_WM_OPACITY of client windows to frame windows.  This prevents
# opacity being ignored for some apps.
detect-client-opacity = true;

# Specify refresh rate of the screen.
# If not specified/0, compton will try detecting this with X RandR extension.
refresh-rate = 0;

# Enable or disable vsync. (used to be a non-boolean string for a mode type)
vsync = true;

# Enable DBE painting mode, intended to use with VSync to (hopefully) eliminate
# tearing. Reported to have no effect, though.
dbe = false;

# Unredirect all windows if a full-screen opaque window is detected, to
# maximize performance for full-screen windows, like games. Known to cause
# flickering when redirecting/unredirecting windows. paint-on-overlay may make
# the flickering less obvious.
unredir-if-possible = true;

# Specify a list of conditions of windows that should always be considered
# focused.
focus-exclude = [ ];

# Use WM_TRANSIENT_FOR to group windows, and consider windows in the same group
# focused at the same time.
detect-transient = true;
# Use WM_CLIENT_LEADER to group windows, and consider windows in the same group
# focused at the same time. WM_TRANSIENT_FOR has higher priority if
# --detect-transient is enabled as well.
detect-client-leader = true;

#################################
#
# Window type settings
#
#################################

wintypes:
{
    tooltip =
    {
        # fade: Fade the particular type of windows.
        fade = true;
        # shadow: Give those windows shadow
        shadow = false;
        # opacity: Default opacity for the type of windows.
        opacity = 0.85;
        # focus: Whether to always consider windows of this type focused.
        focus = true;
    };
    dock =
    {
        # shadown: Give those windows shadow
        shadow = false;
    };
    dnd = {
        # shadown: Give those windows shadow
        shadow = false;
    };
    popup_menu = {
        # opacity: Default opacity for the type of windows.
        opacity = 1;
    }
    dropdown_menu = {
        # opacity: Default opacity for the type of windows.
        opacity = 1;
    }
};
